#!/bin/bash

# Git Flow Enforcement Pre-Commit Hook
# This hook prevents direct commits to protected branches and provides git flow hints

BRANCH=$(git rev-parse --abbrev-ref HEAD)
PROTECTED_BRANCHES="^(main|master|develop)$"

# Color codes for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Check if committing to protected branch
if [[ "$BRANCH" =~ $PROTECTED_BRANCHES ]]; then
    echo -e "${RED}‚ùå ERROR: Direct commits to '$BRANCH' branch are not allowed!${NC}"
    echo ""
    echo -e "${YELLOW}üìù Git Flow Usage Instructions:${NC}"
    echo ""
    echo "For new features:"
    echo -e "${GREEN}  git flow feature start <feature-name>${NC}"
    echo "  # Make your changes and commits"
    echo -e "${GREEN}  git flow feature finish <feature-name>${NC}"
    echo ""
    echo "For releases:"
    echo -e "${GREEN}  git flow release start <version>${NC}"
    echo "  # Bump version, update changelog"
    echo -e "${GREEN}  git flow release finish <version>${NC}"
    echo ""
    echo "For hotfixes:"
    echo -e "${GREEN}  git flow hotfix start <version>${NC}"
    echo "  # Apply fix"
    echo -e "${GREEN}  git flow hotfix finish <version>${NC}"
    echo ""
    echo -e "${YELLOW}üí° TIP: Your changes are safe. Stash them and create a proper branch:${NC}"
    echo "  git stash"
    echo "  git flow feature start <your-feature>"
    echo "  git stash pop"
    echo ""
    exit 1
fi

# Check if on a git flow branch
if [[ ! "$BRANCH" =~ ^(feature|release|hotfix|bugfix|support)/ ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  WARNING: You're on branch '$BRANCH' which doesn't follow git flow naming.${NC}"
    echo -e "${YELLOW}   Consider using git flow commands for better organization.${NC}"
    echo ""
fi

# Validate commit message format (Conventional Commits)
COMMIT_MSG_FILE=$1
if [ -n "$COMMIT_MSG_FILE" ]; then
    COMMIT_REGEX='^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .+$'
    if ! grep -qE "$COMMIT_REGEX" "$COMMIT_MSG_FILE"; then
        echo -e "${YELLOW}‚ö†Ô∏è  Commit message doesn't follow Conventional Commits format${NC}"
        echo "   Expected format: <type>(<scope>): <subject>"
        echo "   Types: feat, fix, docs, style, refactor, test, chore, perf, ci, build, revert"
    fi
fi

exit 0